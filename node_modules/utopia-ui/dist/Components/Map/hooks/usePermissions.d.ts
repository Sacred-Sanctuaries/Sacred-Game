import * as React from "react";
import { ItemsApi, Permission, PermissionAction } from "../../../types";
declare type UsePermissionManagerResult = ReturnType<typeof usePermissionsManager>;
declare function usePermissionsManager(initialPermissions: Permission[]): {
    permissions: Permission[];
    setPermissionApi: (api: ItemsApi<any>) => void;
    setPermissionData: (data: Permission[]) => void;
    setAdminRole: (adminRole: string) => void;
    hasUserPermission: (collectionName: string, action: PermissionAction) => boolean;
};
export declare const PermissionsProvider: React.FunctionComponent<{
    initialPermissions: Permission[];
    children?: React.ReactNode;
}>;
export declare const usePermissions: () => Permission[];
export declare const useSetPermissionApi: () => UsePermissionManagerResult["setPermissionApi"];
export declare const useSetPermissionData: () => UsePermissionManagerResult["setPermissionData"];
export declare const useHasUserPermission: () => UsePermissionManagerResult["hasUserPermission"];
export declare const useSetAdminRole: () => UsePermissionManagerResult["setAdminRole"];
export {};
