import * as React from "react";
import { Item, ItemsApi, Tag } from "../../../types";
declare type UseTagManagerResult = ReturnType<typeof useTagsManager>;
declare function useTagsManager(initialTags: Tag[]): {
    tags: Tag[];
    addTag: (tag: Tag) => void;
    removeTag: (id: string) => void;
    setTagApi: (api: ItemsApi<Tag>) => void;
    setTagData: (data: Tag[]) => void;
    getItemTags: (item: Item) => Tag[];
};
export declare const TagsProvider: React.FunctionComponent<{
    initialTags: Tag[];
    children?: React.ReactNode;
}>;
export declare const useTags: () => Tag[];
export declare const useAddTag: () => UseTagManagerResult["addTag"];
export declare const useRemoveTag: () => UseTagManagerResult["removeTag"];
export declare const useSetTagApi: () => UseTagManagerResult["setTagApi"];
export declare const useSetTagData: () => UseTagManagerResult["setTagData"];
export declare const useGetItemTags: () => UseTagManagerResult["getItemTags"];
export {};
